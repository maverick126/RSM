<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xml:lang="en-US"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2006"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:local="clr-namespace:SQSAdmin_WpfCustomControlLibrary"
    xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit"
>

  <SolidColorBrush x:Key="MyToolBarGripperSolidBrush" Color="#C6C3C6"/>
  <SolidColorBrush x:Key="MyBrightBlueSolidBrush1" Color="#FFBFDBFF"/>
  <SolidColorBrush x:Key="MyBrightBlueSolidBrush2" Color="#FFDFECFF"/>
  <SolidColorBrush x:Key="MyBlueSolidBrush1" Color="#FF6593CF"/>
  <SolidColorBrush x:Key="MyBlueSolidBrush2" Color="#FF3D6394"/>
  <SolidColorBrush x:Key="MySelectedListItemBlueSolidBrush" Color="#FFA7CDF0"/>
  <SolidColorBrush x:Key="MyDarkBlueSolidBrush" Color="#FF2B5597"/>
  <SolidColorBrush x:Key="MyBrightOrangeSolidBrush" Color="#FFFFE7A2"/>
  <SolidColorBrush x:Key="MyOrangeSolidBrush" Color="#FFFFBD69"/>
  <SolidColorBrush x:Key="MyDarkOrangeSolidBrush" Color="#FFFB8C3C"/>
  <SolidColorBrush x:Key="MyInboxExpanderExpandSiteBackground" Color="#FFF7BE57"/>
  <SolidColorBrush x:Key="MyDropDownGraySolidBrush1" Color="#FFE9EEEE"/>
  <SolidColorBrush x:Key="MyDropDownGraySolidBrush2" Color="#FFF6F6F6"/>
  <SolidColorBrush x:Key="MyGraySolidBrush" Color="#FFE5E5E5"/>

  <LinearGradientBrush x:Key="MyToolBarBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF9F9F9" Offset="0"/>
        <GradientStop Color="#FFEEEEEE" Offset="0.041666666666666664"/>
        <GradientStop Color="#FFF1F1F1" Offset="0.5"/>
        <GradientStop Color="#FFD6D6D6" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyBorderBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFB3D6FD" Offset="0.044936933513453105"/>
    <GradientStop Color="#FFA7CAF3" Offset="0.046890713231429328"/>
    <GradientStop Color="#FFB7D9FF" Offset="0.052752052385357996"/>
    <GradientStop Color="#FF688FCD" Offset="0.98827732169214266"/>
    <GradientStop Color="#FF688FBA" Offset="0.99413866084607139"/>
    <GradientStop Color="#FF6990D2" Offset="0.99804622028202383"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF9F9F9" Offset="0"/>
    <GradientStop Color="#FFEEEEEE" Offset="0.2"/>
    <GradientStop Color="#FFD6D6D6" Offset="0.6"/>
        <GradientStop Color="#FFBEBEBE" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyButtonBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFD9EDFF" Offset="0"/>
    <GradientStop Color="#FFE0E0E0" Offset="0.445"/>
    <GradientStop Color="#FFEEEEEE" Offset="1"/>
    <GradientStop Color="#FFD6D6D6" Offset="0.53"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyBlueBarGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF1F1F1" Offset="0.2"/>
    <GradientStop Color="#FFD6D6D6" Offset="0.96"/>
    <GradientStop Color="#FFA6A6A6" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyHGridSplitterBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFDFDFD" Offset="0"/>
    <GradientStop Color="#FFC0DEFF" Offset="0.654"/>
    <GradientStop Color="#FFC0D9FB" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyOrangeBarGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFFFDC" Offset="0"/>
    <GradientStop Color="#FFFADC96" Offset="0.525"/>
    <GradientStop Color="#FFF9D07D" Offset="0.732"/>
    <GradientStop Color="#FFF7BE57" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MySelectedButtonOrangeGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF2DABD" Offset="0"/>
    <GradientStop Color="#FFFFCF8C" Offset="0.0967741935483871"/>
    <GradientStop Color="#FFFDC47F" Offset="0.25806451612903225"/>
    <GradientStop Color="#FFF9B04A" Offset="0.38709677419354838"/>
    <GradientStop Color="#FFFFDD7B" Offset="0.967741935483871"/>
    <GradientStop Color="#FFF3DE94" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyMouseOverOrangeGradientBrush1" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFDF8EE" Offset="0"/>
        <GradientStop Color="#FFE3DfD6" Offset="0.6"/> 
    <GradientStop Color="#FFB5B2AB" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyMouseOverOrangeGradientBrush2" EndPoint="0,1" StartPoint="0,0" SpreadMethod="Reflect">
    <GradientStop Color="#FFF6B046" Offset="0.5"/>
    <GradientStop Color="#FFEDA234" Offset="0.7"/>
    <GradientStop Color="#FFEA9727" Offset="0.8"/>
    <GradientStop Color="#FFE98915" Offset="0.9"/>
    <GradientStop Color="#FFE87F08" Offset="1"/>
    <GradientStop Color="#FFF7DA7B" Offset="0"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyMouseOverOrangeGradientBrush3" EndPoint="0,1" StartPoint="0,0" SpreadMethod="Reflect">
        <GradientStop Color="#e0ebeb" Offset="0.2"/>
        <GradientStop Color="#eff5f5" Offset="0.6"/>
        <GradientStop Color="#d0e1e1" Offset="1"/>
        <GradientStop Color="#eff5f5" Offset="0"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyMouseDownOrangeGradientBrush" EndPoint="0,1" StartPoint="0,0" SpreadMethod="Reflect">
    <GradientStop Color="#FFF6B046" Offset="0.5"/>
    <GradientStop Color="#FFEDA234" Offset="0.3"/>
    <GradientStop Color="#FFEA9727" Offset="0.2"/>
    <GradientStop Color="#FFE98915" Offset="0.1"/>
    <GradientStop Color="#FFF7DA7B" Offset="1"/>
    <GradientStop Color="#FFE87F08" Offset="0"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyButtonPressedOrangeGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFB923C" Offset="0"/>
    <GradientStop Color="#FFFC953C" Offset="0.0967741935483871"/>
    <GradientStop Color="#FFFD9D3D" Offset="0.303"/>
    <GradientStop Color="#FFFFAB3F" Offset="0.551"/>
    <GradientStop Color="#FFFFB14D" Offset="0.788"/>
    <GradientStop Color="#FFFFB85D" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyDropDownGrayGradientBrush" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFE9EEEE" Offset="0.15"/>
    <GradientStop Color="#FFF6F6F6" Offset="0.15"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyGridViewColumnHeaderBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFC4DDFF" Offset="0.987"/>
    <GradientStop Color="#FFDEECFF" Offset="0.535"/>
  </LinearGradientBrush>
  
  <LinearGradientBrush x:Key="MyGridViewColumnHeaderButtonPressedBlueGradientBrush" EndPoint="0,0" StartPoint="0,1">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFC4DDFF" Offset="0.987"/>
    <GradientStop Color="#FFDEECFF" Offset="0.535"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MyDarkOrangeGradientBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFBD69" Offset="0"/>
    <GradientStop Color="#FFFFB75A" Offset="0.0967741935483871"/>
    <GradientStop Color="#FFFFB14C" Offset="0.25806451612903225"/>
    <GradientStop Color="#FFFB8C3C" Offset="0.38709677419354838"/>
    <GradientStop Color="#FFFEB461" Offset="0.967741935483871"/>
    <GradientStop Color="#FFFEBB67" Offset="1"/>
  </LinearGradientBrush>

  <!-- Simple Button - This control sets brushes on each state. Note that these brushes must be listed above since they are static resources -->
  <Style x:Key="MyBottomLeftButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>-->
    <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
          <Grid x:Name="Grid">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
            <!-- Content Presenter is where the text content etc is placed by the control -->
            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
          </Grid>
          <!--Each state sets a brush on the Border in the template -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyDarkOrangeGradientBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsPressed" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyMouseOverOrangeGradientBrush1}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="true"/>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
              <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ClickMode" Value="Press"/>
  </Style>

	<SolidColorBrush x:Key="MyBlueBorderSolidBrush" Color="#FF2B5597"/>
	<LinearGradientBrush x:Key="MyBlueBackgroundGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE3EFFF" Offset="0"/>
		<GradientStop Color="#FFAED1FF" Offset="1"/>
		<GradientStop Color="#FFC7DFFF" Offset="0.544"/>
	</LinearGradientBrush>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
	<Style x:Key="MyDoubleArrowToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Width="26" Background="#00AF1616">
						<Path RenderTransformOrigin="0.5,0.5" Fill="{x:Null}" Stretch="Fill" Stroke="{DynamicResource MyDarkBlueSolidBrush}" HorizontalAlignment="Stretch" Margin="9.5,11.167,12.083,11" x:Name="path" Width="Auto" Data="M9.9166667,11.666667 L6.499667,15.999667 9.9163337,19.666334">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
						<Path Fill="{x:Null}" Stretch="Fill" Stroke="{DynamicResource MyDarkBlueSolidBrush}" Data="M9.9166667,11.666667 L6.499667,15.999667 9.9163337,19.666334" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Margin="0,11.167,8,11" x:Name="path1" Width="4.083">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="path">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="180"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="RenderTransform" TargetName="path1">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="180"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MySidebarButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Margin="0,0,0,0" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
						<ContentPresenter HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsPressed" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="border" Value="{DynamicResource MyBrightOrangeSolidBrush}"/>
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"/>
							</ScrollViewer>
							<ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local"/>
						</DockPanel>
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
							<Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Fill="White" Width="1" DockPanel.Dock="Left"/>
							<Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Fill="White" Height="1" DockPanel.Dock="Top"/>
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MyListViewStyle" TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="#FF042271"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Microsoft_Windows_Themes:ListBoxChrome SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}">
						<ScrollViewer Style="{DynamicResource MyListViewScrollViewerStyle}" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Microsoft_Windows_Themes:ListBoxChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MyListViewScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{DynamicResource MyGridViewColumnHeaderStyle}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"/>
							</ScrollViewer>
							<ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local"/>
						</DockPanel>
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
							<Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Fill="White" Width="1" DockPanel.Dock="Left"/>
							<Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Fill="White" Height="1" DockPanel.Dock="Top"/>
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFFFFFF" Offset="0"/>
		<GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
		<GradientStop Color="#FFF7F8F9" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF2F2F2" Offset="0"/>
		<GradientStop Color="#FFD5D5D5" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right" Value="-9"/>
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}">
						<Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFBDEDFF" Offset="0"/>
		<GradientStop Color="#FFB7E7FB" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FF8DD6F7" Offset="0"/>
		<GradientStop Color="#FF8AD1F5" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="MyGridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{DynamicResource MyGridViewColumnHeaderBlueGradientBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource MyDarkBlueSolidBrush}"/>
		<Setter Property="BorderThickness" Value="0,0.5,0,0.5"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template" Value="{DynamicResource MyGridViewColumnHeaderControlTemplate}"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.4082"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Canvas x:Name="PART_FloatingHeaderCanvas">
								<Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
							<ControlTemplate.Triggers>
								<Trigger Property="Height" Value="Auto">
									<Setter Property="MinHeight" Value="20"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="MyGridViewColumnHeaderControlTemplate" TargetType="{x:Type GridViewColumnHeader}">
		<Grid SnapsToDevicePixels="true" x:Name="Grid">
			<Border x:Name="HeaderBorder" Background="{DynamicResource MyGridViewColumnHeaderBlueGradientBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition MaxHeight="7"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Border Grid.RowSpan="2" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="0,0.5,0,0.5" Padding="{TemplateBinding Padding}">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" x:Name="HeaderContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Border>
				</Grid>
			</Border>
			<Canvas>
				<Thumb Margin="-1,2,0,2" x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Width="1" Height="16" Background="{DynamicResource MyBlueSolidBrush1}" Canvas.Left="{Binding Path=ActualWidth, ElementName=Grid, Mode=Default}"/>
			</Canvas>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true"/>
			<Trigger Property="IsPressed" Value="true">
				<Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
				<Setter Property="Background" TargetName="HeaderBorder" Value="{DynamicResource MyGridViewColumnHeaderButtonPressedBlueGradientBrush}"/>
			</Trigger>
			<Trigger Property="Height" Value="Auto">
				<Setter Property="MinHeight" Value="20"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="MyListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="0,1.5,0,1.5"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="Template" Value="{DynamicResource MyListViewItemContainerControlTemplate}"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding XPath=Read}" Value="false">
				<Setter Property="TextBlock.FontWeight" Value="Bold"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>


    <ControlTemplate x:Key="MyListViewItemContainerControlTemplate" TargetType="{x:Type ListBoxItem}">
        <Border SnapsToDevicePixels="True" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource MyBlueSolidBrush1}" BorderThickness="0,0,0,0.5" Padding="{TemplateBinding Padding}">
            <GridViewRowPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MySelectedListItemBlueSolidBrush}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF000000"/>
                <Setter Property="BorderThickness" TargetName="Bd" Value="0.5,0.5,0.5,0.5"/>
                <Setter Property="Margin" TargetName="Bd" Value="0,-1,0,0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MyGraySolidBrush}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource MyBlueSolidBrush1}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Background="{DynamicResource MyToolBarBlueGradientBrush}" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <!--<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>-->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MyBrightOrangeSolidBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyToolBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Background="{DynamicResource MyToolBarBlueGradientBrush}" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <!--<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>-->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MyBrightOrangeSolidBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>